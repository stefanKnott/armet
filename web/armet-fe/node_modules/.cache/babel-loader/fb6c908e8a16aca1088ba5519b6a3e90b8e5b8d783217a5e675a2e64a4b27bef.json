{"ast":null,"code":"var _jsxFileName = \"/Users/stefanknott/Desktop/workspace/github.com/stefanKnott/cmate-fe/cmate/src/components/Layout.jsx\",\n  _s = $RefreshSig$();\nimport { Sidebar, Menu, MenuItem, useProSidebar, SubMenu } from 'react-pro-sidebar';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Layout = () => {\n  _s();\n  const [chartsByNamespace, setChartsByNamespace] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = () => {\n      fetch('http://localhost:8080/api/v1/helm/namespaces').then(response => {\n        return response.json();\n      }).then(data => {\n        setChartsByNamespace(data[\"releases\"]);\n        console.log(data[\"releases\"]);\n        setIsLoading(false);\n      });\n    };\n    fetchData();\n  }, []);\n  const getNumDeployed = charts => {\n    let numDeployed = 0;\n    charts.map(chart => {\n      if (chart.info.status == \"deployed\") {\n        numDeployed++;\n      }\n    });\n    return numDeployed;\n  };\n  const getNamespaceLabel = (namespace, charts) => {\n    let namespaceLabel = namespace;\n    namespaceLabel = namespaceLabel + \"(\" + getNumDeployed(charts) + \"/\" + charts.length;\n    return namespaceLabel;\n  };\n  const Charts = _ref => {\n    let {\n      charts\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: charts[0].name\n      }, charts[0].name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Sidebar, {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Menu, {\n        children: Object.entries(chartsByNamespace).map(_ref2 => {\n          let [namespace, charts] = _ref2;\n          return /*#__PURE__*/_jsxDEV(SubMenu, {\n            label: getNamespaceLabel(namespace, charts),\n            children: /*#__PURE__*/_jsxDEV(Charts, {\n              charts: charts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, namespace, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 14\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n_s(Layout, \"gS8nARJWv+waCBw7H1x5mMX/qZQ=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["Sidebar","Menu","MenuItem","useProSidebar","SubMenu","React","useState","useEffect","jsxDEV","_jsxDEV","Layout","_s","chartsByNamespace","setChartsByNamespace","isLoading","setIsLoading","fetchData","fetch","then","response","json","data","console","log","getNumDeployed","charts","numDeployed","map","chart","info","status","getNamespaceLabel","namespace","namespaceLabel","length","Charts","_ref","children","name","fileName","_jsxFileName","lineNumber","columnNumber","style","display","height","Object","entries","_ref2","label","_c","$RefreshReg$"],"sources":["/Users/stefanknott/Desktop/workspace/github.com/stefanKnott/cmate-fe/cmate/src/components/Layout.jsx"],"sourcesContent":["import { Sidebar, Menu, MenuItem, useProSidebar, SubMenu } from 'react-pro-sidebar';\nimport React, {useState, useEffect} from 'react';\n\n\nconst Layout = () => {\n    const [chartsByNamespace, setChartsByNamespace] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n\n    const fetchData = () => {\n      fetch('http://localhost:8080/api/v1/helm/namespaces')\n      .then(response => {\n          return response.json()\n      })\n      .then(data => {\n        setChartsByNamespace(data[\"releases\"]);\n        console.log(data[\"releases\"]);\n        setIsLoading(false);\n      })\n    };\n\n    fetchData();\n  }, []);\n\n  const getNumDeployed = (charts) => {\n    let numDeployed = 0;\n    charts.map((chart) => {\n      if (chart.info.status == \"deployed\"){\n        numDeployed++;\n      }\n    })\n\n    return numDeployed;\n  }\n\n  const getNamespaceLabel = (namespace, charts) => {\n    let namespaceLabel = namespace;\n    namespaceLabel = namespaceLabel + \"(\"+getNumDeployed(charts) + \"/\" +charts.length\n    return namespaceLabel;\n  }\n\n  const Charts = ({charts}) => (\n    <div>\n    {/* {charts.map(chart => { */}\n        <MenuItem key={charts[0].name}>{charts[0].name}</MenuItem>\n     {/* })}   */}\n    </div>  \n  ) \n\n    return (\n      <div style={{ display: 'flex', height: '100%' }}>\n        <Sidebar>\n        {isLoading ? (\n          <p>loading</p>\n        ) : (\n          <Menu>\n           {Object.entries(chartsByNamespace).map(([namespace, charts]) => (\n             <SubMenu key={namespace} label={getNamespaceLabel(namespace, charts)}>\n              <Charts charts={charts}/>\n            </SubMenu>\n            ))} \n          </Menu>\n          )}\n        </Sidebar>\n      </div>\n    );\n};\n\nexport default Layout;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}